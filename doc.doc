CSS Documentation
designed for a responsive website 

|Global style|
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
* selector targets all elements on the page, setting the box-sizing property to border-box, and removing margin and padding from all elements

html {
  background-color: rgba(40, 15, 50, 0.2);
}

html,
body {
  height: 100%;
}

body {
  font-family: Arial, sans-serif;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}
The html and body elements are styled with a background color and full height. The body element also has a font family defined, a minimum height of 100 viewport height units, and is displayed as a flex container with a column direction.

|Header and Navigation|
/Header and Navigation/
The header and nav sections of the CSS file define the styles for the website's header and navigation bar. The header has a background image, font family, and font size specified. The navigation bar uses flexbox for alignment and positioning.
/Dropdown Menu/
The dropdown menu is hidden by default, with a display: none property. When the parent list item is hovered, the dropdown menu is displayed.
/Burger Menu/
The burger menu icon is hidden by default with the display: none property. It is intended to be shown on smaller devices when the traditional navigation menu is hidden.

nav {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
}
display: flex; - Specifies that the nav element should be a flexible container, allowing its child elements to be laid out in a flexible manner.
flex-wrap: wrap; - Specifies that if the child elements of nav can't fit on one line, they should wrap to the next line.
align-items: center; - Specifies that child elements of nav should be vertically centered.
justify-content: space-between; - Specifies that child elements of nav should be horizontally spaced out evenly, with extra space between each element.

nav ul {
  display: flex;
  list-style: none;
  margin: 1px;
  padding: 2px;
}
display: flex; - Specifies that the ul element should be a flexible container, allowing its child elements to be laid out in a flexible manner.
list-style: none; - Specifies that the default bullet point list style should be removed from the ul element.
margin: 1px; - Specifies the margin around the ul element.
padding: 2px; - Specifies the padding inside the ul element.

nav ul li {
  margin: 0 10px;
}
margin: 0 10px; - Specifies the margin around each li element within the ul.

nav ul li a {
  display: block;
  padding: 10px;
  color: #fff;
  text-decoration: none;
  transition: all 0.3s ease;
}
display: block; - Specifies that the a element should be a block-level element, taking up the full width available in its parent element.
padding: 10px; - Specifies the padding inside the a element.
color: #fff; - Specifies the text color of the a element.
text-decoration: none; - Specifies that the default underline decoration on the a element should be removed.
transition: all 0.3s ease; - Specifies that any CSS property changes on the a element should be transitioned smoothly over 0.3 seconds.

nav ul li a:hover {
  background-color: #000000;
  color: #fff;
}
background-color: #000000; - Specifies the background color of the a element when the mouse hovers over it.
color: #fff; - Specifies the text color of the a element when the mouse hovers over it.

nav ul li.dropdown {
  position: relative;
}
position: relative; - Specifies that the li element should be positioned relative to its normal position within the ul.

nav ul li.dropdown ul.dropdown-content {
  display: none;
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  padding: 10px;
  background-color: #3b0422bd;
  border: 1px solid rgba(0, 0, 0, 0);
  border-top: none;
  z-index: 1;
}
display: none; - Specifies that the dropdown content should be hidden by default.
position: absolute; - Specifies that the dropdown content should be positioned absolutely, relative to the nearest positioned ancestor element.
top: 100%; - Specifies the distance between the top of the dropdown content and the bottom of its parent element.
left: 0; - Specifies the distance between the left edge of the dropdown content and the left edge of its parent element.
width: 100%; - Specifies the width of the dropdown content.
padding: 10px; - Specifies the padding inside the dropdown content.
background-color: #3b0422bd; - Specifies the background color of the dropdown content.
border: 1px solid rgba(0, 0, 0, 0); - Specifies that the dropdown content should have a solid border with no color.
border-top: none; - Specifies that the top border of the dropdown content should be removed.
z-index: 1; - Specifies the stacking order of the dropdown content.

nav ul li.dropdown:hover ul.dropdown-content {
  display: block;
}
display: block; - Specifies that the dropdown content should be displayed when the mouse hovers over its parent li.dropdown element.

nav .burger {
  display: none;
  cursor: pointer;
}
display: none; - Specifies that the hamburger menu icon should not be displayed by default.
cursor: pointer; - Specifies that the cursor should change to a pointer when hovering over the hamburger menu icon.

.logo {
  width: 80px;
  height: 80px;
}
width: 80px; - Specifies the width of the .logo element.
height: 80px; - Specifies the height of the .logo element.

ul {
  list-style: none;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
}
list-style: none; - Specifies that the default bullet point list style should be removed from the ul element.
display: flex; - Specifies that the ul element should be a flexible container, allowing its child elements to be laid out in a flexible manner.
flex-wrap: wrap; - Specifies that if the child elements of ul can't fit on one line, they should wrap to the next line.
align-items: center; - Specifies that child elements of ul should be vertically centered.
justify-content: space-between; - Specifies that child elements of ul should be horizontally spaced out evenly, with extra space between each element.

li {
  margin: 0 1rem;
}
margin: 0 1rem; - Specifies the margin around each li element within the ul.

a {
  color: #fff;
  text-decoration: none;
}
color: #fff; - Specifies the text color of the a element.
text-decoration: none; - Specifies that the default underline decoration on the a element should be removed.

.burger {
  display: none;
  cursor: pointer;
}
display: none; - Specifies that the hamburger menu icon should not be displayed by default.
cursor: pointer; - Specifies that the cursor should change to a pointer when hovering over the hamburger menu icon.
.burger div - Specifies the styling for the three div elements that make up the hamburger menu icon.
width: 25px; - Specifies the width of each div element.
height: 3px; - Specifies the height of each div element.
background-color: #fff; - Specifies the background color of each div element.
margin: 5px; - Specifies the margin between each div element.
transition: all 0.3s ease; - Specifies that any CSS property changes on the div elements should be transitioned smoothly over 0.3 seconds.

.burger div {
  width: 25px;
  height: 3px;
  background-color: #fff;
  margin: 5px;
  transition: all 0.3s ease;
}
width: 25px; - Specifies the width of each div element.
height: 3px; - Specifies the height of each div element.
background-color: #fff; - Specifies the background color of each div element.
margin: 5px; - Specifies the margin between each div element.
transition: all 0.3s ease; - Specifies that any CSS property changes on the div elements should be transitioned smoothly over 0.3 seconds.

.login {
  display: flex;
  align-items: center;
}
display: flex; - Specifies that the login element should be a flexible container, allowing its child elements to be laid out in a flexible manner.
align-items: center; - Specifies that child elements of login should be vertically centered.

#login-button {
  padding: 0.5rem 1rem;
  margin-right: 1rem;
  cursor: pointer;
}
padding: 0.5rem 1rem; - Specifies the padding inside the #login-button element.
margin-right: 1rem; - Specifies the margin on the right side of the #login-button element.
cursor: pointer; - Specifies that the cursor should change to a pointer when hovering over the #login-button element.

#signup-button {
  padding: 0.5rem 1rem;
  cursor: pointer;
}
padding: 0.5rem 1rem; - Specifies the padding inside the #signup-button element.
cursor: pointer; - Specifies that the cursor should change to a pointer when hovering over the #signup-button element.

|hero and upper section of body|
/Hero Section/
The hero section contains a background image, specified dimensions, and flexbox properties for centering its content.
/Services Section/
The services section is styled with a flex container for horizontal alignment, and individual .service elements have hover effects with an overlay and text.

.hero {
  background-position: center;
  margin-bottom: 10vh;
  margin: 20px auto;
  max-width: 1000px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  cursor: pointer;
}
background-position: center; - Specifies the position of the background image within the hero element.
margin-bottom: 10vh; - Specifies the margin on the bottom of the hero element.
margin: 20px auto; - Specifies the margin on the top and bottom of the hero element and auto on the left and right.
max-width: 1000px; - Specifies the maximum width of the hero element.
display: flex; - Specifies that the hero element should be a flexible container, allowing its child elements to be laid out in a flexible manner.
flex-direction: column; - Specifies that child elements of hero should be laid out in a column.
align-items: center; - Specifies that child elements of hero should be vertically centered.
justify-content: center; - Specifies that child elements of hero should be horizontally centered.
text-align: center; - Specifies that the text within child elements of hero should be centered.
cursor: pointer; - Specifies that the cursor should change to a pointer when hovering over the hero element.

.hero h1 {
  font-size: 3rem;
  margin-bottom: 1rem;
}
font-size: 3rem; - Specifies the font size for the h1 element within hero.
margin-bottom: 1rem; - Specifies the margin on the bottom of the h1 element within hero.

.hero p {
  font-size: 1.5rem;
  margin-bottom: 2rem;
}
font-size: 1.5rem; - Specifies the font size for the p element within hero.
margin-bottom: 2rem; - Specifies the margin on the bottom of the p element within hero.

.hero img {
  contain: content;
}
contain: content; - Specifies that the img element should be scaled to fit its container element.

.btn {
  background-color: rgba(50, 150, 100, 1);
  color: #fff;
  border: none;
  padding: 0.5rem 1rem;
  cursor: pointer;
  box-shadow: rgba(0, 0, 0, 0.5);
}
background-color: rgba(50, 150, 100, 1); - Specifies the background color of the .btn element.
color: #fff; - Specifies the text color of the .btn element.
border: none; - Specifies that the .btn element should have no border.
padding: 0.5rem 1rem; - Specifies the padding inside the .btn element.
cursor: pointer; - Specifies that the cursor should change to a pointer when hovering over the .btn element.
box-shadow: rgba(0, 0, 0, 0.5); - Specifies the box shadow of the .btn element.

.services {
  position: relative;
  width: 80%;
  margin-top: 0%;
  display: flex;
}
position: relative; - Specifies that the .services element should be positioned relative to its normal position on the page.
width: 80%; - Specifies the width of the .services element.
margin-top: 0%; - Specifies the margin on the top of the .services element.
display: flex; - Specifies that the .services element should be a flexible container, allowing its child elements to be laid out in a flexible manner.

.service {
  float: left;
  width: 33.33%;
  position: relative;
  cursor: pointer;
}
float: left; - Specifies that the .service element should be floated to the left.
width: 33.33%; - Specifies the width of the .service element.
position: relative; - Specifies that the .service element should be positioned relative to its normal position within .services.
cursor: pointer; - Specifies that the cursor should change to a pointer when hovering over the .service element.

.service img {
  width: 100%;
}
width: 100%; - Specifies the width of the img element within .service.

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.7);
  visibility: hidden;
  opacity: 0;
  transition: all 0.5s ease;
}
position: absolute; - Specifies that the .overlay element should be positioned absolutely, relative to the nearest positioned ancestor element.
top: 0; - Specifies the distance between the top of the .overlay element and the top of its parent element.
left: 0; - Specifies the distance between the left edge of the .overlay element and the left edge of its parent element.
width: 100%; - Specifies the width of the .overlay element.
height: 100%; - Specifies the height of the .overlay element.
background: rgba(0, 0, 0, 0.7); - Specifies the background color and transparency of the .overlay element.
visibility: hidden; - Specifies that the .overlay element should be hidden by default.
opacity: 0; - Specifies the opacity of the .overlay element.
transition: all 0.5s ease;- Specifies that any CSS property changes on the .overlay element should be transitioned smoothly over 0.5 seconds.

.text {
  color: #fff;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  visibility: hidden;
  opacity: 0;
  transition: all 0.5s ease;
}
color: #fff; - Specifies the text color of the .text element.
position: absolute; - Specifies that the .text element should be positioned absolutely, relative to the nearest positioned ancestor element.
top: 50%; - Specifies the distance between the top of the .text element and the top of its parent element.
left: 50%; - Specifies the distance between the left edge of the .text element and the left edge of its parent element.
transform: translate(-50%, -50%); - Specifies that the .text element should be positioned in the center of its parent element.
visibility: hidden; - Specifies that the .text element should be hidden by default.
opacity: 0; - Specifies the opacity of the .text element.
transition: all 0.5s ease; - Specifies that any CSS property changes on the .text element should be transitioned smoothly over 0.5 seconds.

.service:hover .overlay {
  visibility: visible;
  opacity: 1;
}
Specifies that when the mouse hovers over the .service element, the .overlay element within it should become visible.
visibility: visible; - Specifies that the .overlay element should become visible when hovering over the .service element.
opacity: 1; - Specifies that the opacity of the .overlay element should be increased to 1 when hovering over the .service element.

.service:hover .text {
  visibility: visible;
  opacity: 1;
}
Specifies that when the mouse hovers over the .service element, the .text element within it should become visible.
visibility: visible; - Specifies that the .text element should become visible when hovering over the .service element.
opacity: 1; - Specifies that the opacity of the .text element should be increased to 1 when hovering over the .service element.

|CTA = Call To Action|
The CTA section has a solid background color, padding, and centered text. The .btn class is styled to look like a button with a background color, text color, and box shadow.

.cta {
  background-color: rgba(80, 30, 100, 1);
  padding: 4rem 0;
  text-align: center;
  color: rgba(255, 255, 255, 1);
}
background-color: rgba(80, 30, 100, 1); - Specifies the background color of the .cta element.
padding: 4rem 0; - Specifies the padding on the top and bottom of the .cta element.
text-align: center; - Specifies that the text within the .cta element should be centered.
color: rgba(255, 255, 255, 1); - Specifies the text color of the .cta element.

.cta h2
font-size: 2rem; - Specifies the font size for the h2 element within .cta.
margin-bottom: 2rem; - Specifies the margin on the bottom of the h2 element within .cta.

.cta p
font-size: 1.5rem; - Specifies the font size for the p element within .cta.
margin-bottom: 2rem; - Specifies the margin on the bottom of the p element within .cta.

|Post section|
section.new.posts
margin: 0 auto; - Specifies the margin on the top and bottom of the section element and auto on the left and right.
max-width: 800px; - Specifies the maximum width of the section element.
padding: 20px; - Specifies the padding on the top and bottom of the section element.

.lnh2
color: rgb(39, 2, 15); - Specifies the text color of the .lnh2 element.
text-align: center; - Specifies that the text within the .lnh2 element should be centered.
margin-bottom: 20px; - Specifies the margin on the bottom of the .lnh2 element.
padding: 1em; - Specifies the padding inside the .lnh2 element.

.post
display: flex; - Specifies that the .post element should be a flexible container, allowing its child elements to be laid out in a flexible manner.
align-items: center; - Specifies that child elements of .post should be vertically centered.
margin-bottom: 20px; - Specifies the margin on the bottom of the .post element.
position: relative; - Specifies that the .post element should be positioned relative to its normal position on the page.
cursor: pointer; - Specifies that the cursor should change to a pointer when hovering over the .post element.

.post img
margin-right: 20px; - Specifies the margin on the right of the img element within .post.
vertical-align: middle; - Specifies that the img element should be vertically aligned with the middle of the text in .post.
width: 350; - Specifies the width of the img element within .post.
height: 200; - Specifies the height of the img element within .post.
max-width: 300px; - Specifies the maximum width of the img element within .post.

.post p
margin: 0; - Specifies that the p element within .post should have no margin.
font-size: 1.1em; - Specifies the font size for the p element within .post.
line-height: 1.5; - Specifies the line height for the p element within .post.
display: flex; - Specifies that the p element within .post should be a flexible container, allowing its child elements to be laid out in a flexible manner.
align-items: center; - Specifies that child elements of p within .post should be vertically centered.
justify-content: center; - Specifies that child elements of p within .post should be horizontally centered.

.post:hover
Specifies that when the mouse hovers over the .post element, its background color should change.
background-color: azure; - Specifies the new background color for the .post element when hovered over.

|about.index body|
.infC
margin: 1em; - Specifies the margin on all sides of the .infC element.
The purpose of the .infC class in the about articles news section is to specify the margin for the container element that holds the section.
The margin: 1em; property for the .infC class sets a margin of 1em (which is equivalent to the font size of the parent element) on all sides of the container element.
This creates some space between the container element and adjacent elements on the page, and helps to visually separate the about articles news section from other content on the page.
By setting the margin using a class, the margin can be easily applied to multiple elements with the same class name, rather than having to apply the margin individually to each element.

.GinfC
max-width: 900px; - Specifies the maximum width of the .GinfC element.
margin: 0 auto; - Specifies that the .GinfC element should have auto margins on the left and right, which centers it horizontally within its parent element.
Specifies the maximum width and horizontal centering for the container element that holds the content of the about articles news section.

.infH
font-family: "Franklin Gothic medium"; - Specifies the font family for the text within the .infH element.
font-size: 2.5em; - Specifies the font size for the text within the .infH element.
.infH - Specifies the font family and font size for the heading of the about articles news section.

.infimg1
float: left; - Specifies that the .infimg1 element should float to the left of the text.
margin: 15px; - Specifies the margin on all sides of the .infimg1 element.
.infimg2
float: right; - Specifies that the .infimg2 element should float to the right of the text.
margin: 15px; - Specifies the margin on all sides of the .infimg2 element.
border-radius: 50%; - Specifies the border radius for the .infimg2 element, making it circular.
max-width: 250px; - Specifies the maximum width of the .infimg2 element.
.infimg1 - Specifies the float and margin for the first image in the about articles news section.
.infimg2 - Specifies the float, margin, border radius, and maximum width for the second image in the about articles news section.

|footer|
footer
background-color: rgba(80, 30, 100, 1); - Specifies the background color for the footer element.
color: aliceblue; - Specifies the text color for the text within the footer element.
padding: 0.25em 0; - Specifies the padding on the top and bottom of the footer element.
text-align: center; - Specifies that the text within the footer element should be centered.
.menu
max-width: 990px; - Specifies the maximum width of the .menu element.

|Others|
.NAimg
width: 200px; - Specifies the width of the .NAimg element.
height: 150px; - Specifies the height of the .NAimg element.

.Social
padding: 5px; - Specifies the padding on all sides of the .Social element.
float: left; - Specifies that the .Social element should be floated to the left of the page.
display: block; - Specifies that the .Social element should be displayed as a block element.

main
flex: 1; - Specifies that the main element should be flexible and grow as much as possible to fill the available space.
ul ul
display: none; - Specifies that nested ul elements should not be displayed by default.
ul li:hover > ul
Specifies that when a li element within a ul element is hovered over, its nested ul element should be displayed.
display: block; - Specifies that the nested ul element should be displayed when the li element is hovered over.

.signupnav
font: bold; - Specifies that the text within the .signupnav element should be bold.
font-size: medium; - Specifies the font size for the text within the .signupnav element.

.box
height: 100px; - Specifies the height of the .box element.
width: 200px; - Specifies the width of the .box element.
padding: 20px; - Specifies the padding on all sides of the .box element.
margin: auto; - Specifies that the .box element should be centered horizontally within its parent element.
border: 5px rgba(0, 0, 0, 0.2); - Specifies the border width, style, and color for the .box element.

|index.html|
1. Header and Navigation
The header contains the website's logo, main navigation menu, and a burger menu for mobile devices.
The main navigation menu includes links to the Home, About, Blog (with News and Articles submenus), and Contact (with Instagram and Telegram submenus) pages.
The login and sign-up functionality is also available in the header.

2. Hero Image
This section displays a large image that showcases a featured news item or article.

3. Services
This section highlights three featured services or topics.
Each service is represented by a thumbnail image and overlay text.
Users can click on the images to navigate to the related content.

4. Call to Action
This section invites users to sign up for the website's newsletter to stay informed about the latest blog posts and news.

5. News and Articles
This section presents a list of additional news and articles.
Each entry includes an image, a brief introduction text, and a horizontal rule separating it from the next entry.

6. Footer
The footer contains copyright information and the name of the website.

|Head|
<meta charset="utf-8" /> - Specifies the character encoding for the HTML document as UTF-8, which supports a wide range of characters from different languages and alphabets.
<meta name="viewport" content="width=device-width, initial-scale=1.0" /> - Specifies the viewport settings for the HTML document, which affects how the content is displayed on different devices.
Here, the width=device-width property sets the width of the viewport to the width of the device, and the initial-scale=1.0 property sets the initial zoom level to 100%.
<title>NyxWE</title> - Specifies the title of the HTML document, which appears in the browser tab or window title bar.
<link rel="stylesheet" type="text/css" href="style.css" /> - Specifies an external CSS stylesheet to be used for styling the HTML document.
The rel="stylesheet" attribute indicates that this is a stylesheet, the type="text/css" attribute specifies the type of the stylesheet, and the href="style.css" attribute specifies the URL or file path to the stylesheet.

|Header|
<header> - Defines the header section of the web page.
<nav> - Defines a container for navigation links.
<div><img class="logo" src="image/NyxLogo.png" alt="NyxWE Logo" /></div> - Defines a container for the NyxWE logo.
<ul> - Defines an unordered list of navigation links.
<li><a href="index.html">Home</a></li> - Defines a list item that contains a link to the Home page.
<li><a href="about.html">About</a></li> - Defines a list item that contains a link to the About page.
<li><a href="#">Blog</a> - Defines a list item that contains a link to the Blog page. The href="#" attribute specifies that the link does not currently have a valid destination.
<ul> - Defines a nested unordered list of links for the Blog page.
<li><a href="news.html">News</a></li> - Defines a nested list item that contains a link to the News page.
<li><a href="articels.html">Articles</a></li> - Defines a nested list item that contains a link to the Articles page.
<li><a href="#">Contact</a> - Defines a list item that contains a link to the Contact page.
<ul> - Defines a nested unordered list of links for the Contact page.
<li><a title="Instagram" href="https://www.Instagram.com/nyxwe" target="_blank"><p>Instagram</p></a></li> - Defines a nested list item that contains a link to the NyxWE Instagram page.
<li><a title="Telegram" href="https://www.telegram.me/NyxWE" target="_blank"><p>Telegram</p></a></li> - Defines a nested list item that contains a link to the NyxWE Telegram page.
<div class="burger"> - Defines a container for a hamburger menu icon used for mobile devices.
<div class="line1"></div> - Defines the first line of the hamburger menu icon.
<div class="line2"></div> - Defines the second line of the hamburger menu icon.
<div class="line3"></div> - Defines the third line of the hamburger menu icon.
<div class="login"> - Defines a container for a login/signup button.
<li><a href="#" id=".signupnav">Signup</a> - Defines a list item that contains a link to the Signup page.
The id=".signupnav" attribute specifies the ID of the element for CSS styling and JavaScript manipulation.
<ul> - Defines a nested unordered list of links for the Signup page.
<li><a href="login.html" id="login-button">Login</a></li> - Defines a nested list item that contains a link to the Login page.
<li><a href="signin.html" id="signup-button">Sign Up</a></li> - Defines a nested list item that contains a link to the Sign Up page.

|hero and upper section|
<div class="hero"> - Defines a container for the hero section of the web page.
<img class="hero img" src="./image/XboxShow.jpg" alt="topest News" /> - Defines an image element that represents the top news of the web page.
The class="hero img" attribute specifies the class name for the element for CSS styling.
</div> - Closes the hero container.
<section class=".services"> - Defines a container for the services section of the web page.
The class=".services" attribute specifies the class name for the element for CSS styling.
<a href=""></a> - Defines a link element that is currently empty.
<div class="service"> - Defines a container for a service item.
<img src="./image/SummerG.jpg" alt="Top 1" /> - Defines an image element that represents the top 1 service item.
<div class="overlay"> - Defines a container for an overlay element used for displaying text over the image.
<div class="text">Summer Game Festival</div> - Defines a text element that represents the title of the service item.
</div> - Closes the overlay container.
</div> - Closes the service container.
<a href=""></a> - Defines a link element that is currently empty.
<div class="service"> - Defines a container for a service item.
<img src="./image/XboxShow.jpg" alt="Top 2" /> - Defines an image element that represents the top 2 service item.
<div class="overlay"> - Defines a container for an overlay element used for displaying text over the image.
<div class="text">Xbox Showcase Review</div> - Defines a text element that represents the title of the service item.
</div> - Closes the overlay container.
</div> - Closes the service container.
<a href=""></a> - Defines a link element that is currently empty.
<div class="service"> - Defines a container for a service item.
<img src="./image/PCGaming s.png" alt="Top 3" /> - Defines an image element that represents the top 3 service item.
<div class="overlay"> - Defines a container for an overlay element used for displaying text over the image.
<div class="text">Upcoming PC Gaming Show</div> - Defines a text element that represents the title of the service item.
</div> - Closes the overlay container.
</div> - Closes the service container.
</section> - Closes the services container.

|CTA|
<section class="cta"> - Defines a container for the CTA section of the web page. The class="cta" attribute specifies the class name for the element for CSS styling.
<h2>Latest Blog Posts and News</h2> - Defines a heading element that represents the title of the CTA section.
<p>Sign up for our newsletter and stay up to date.</p> - Defines a paragraph element that represents the description of the CTA section.
<a href="signin.html" class="btn">Sign Up</a> - Defines a link element that represents the call-to-action button.
The href="signin.html" attribute specifies the URL or file path for the Sign Up page, and the class="btn" attribute specifies the class name for the element for CSS styling.

|lower section|
<section class="new posts"> - Defines a container for the section that displays other news and articles on the web page. The class="new posts" attribute specifies the class name for the element for CSS styling.
<h2 class="lnh2">Other News and article</h2> - Defines a heading element that represents the title of the section. The class="lnh2" attribute specifies the class name for the element for CSS styling.
<hr /> - Defines a horizontal rule element used as a divider between each post.
<div class="post"> - Defines a container for a post item. The class="post" attribute specifies the class name for the element for CSS styling.
<p> - Defines a paragraph element that contains the content of the post item.
<img src="./image/SummerG.jpg" alt="Blog Post 1" /> - Defines an image element that represents the post item.
The src="./image/SummerG.jpg" attribute specifies the file path for the image, and the alt="Blog Post 1" attribute specifies the alternative text description for the image.
Lorem ipsum dolor sit amet consectetur adipisicing elit. Illo, sit? Velit expedita assumenda rerum dicta eligendi reprehenderit deleniti blanditiis commodi maiores, quas animi porro laudantium a minus magnam qui accusamus. - Represents the content of the post item.
</p> - Closes the paragraph element.
</div> - Closes the post container.
<hr /> - Defines a horizontal rule element used as a divider between each post.
<div class="post"> - Defines a container for a post item. The class="post" attribute specifies the class name for the element for CSS styling.
<p> - Defines a paragraph element that contains the content of the post item.
<img src="./image/Boltgun.png" alt="Blog Post 2" /> - Defines an image element that represents the post item.The src="./image/Boltgun.png" attribute specifies the file path for the image, and the alt="Blog Post 2" attribute specifies the alternative text description for the image.
Lorem ipsum dolor sit amet consectetur adipisicing elit. Illo, sit? Velit expedita assumenda rerum dicta eligendi reprehenderit deleniti blanditiis commodi maiores, quas animi porro laudantium a minus magnam qui accusamus. - Represents the content of the post item.
</p> - Closes the paragraph element.
</div> - Closes the post container.
<hr /> - Defines a horizontal rule element used as a divider between each post.
<div class="post"> - Defines a container for a post item. The class="post" attribute specifies the class name for the element for CSS styling.
<p> - Defines a paragraph element that contains the content of the post item.
<img src="./image/Mirage.png" alt="Blog Post 3" /> - Defines an image element that represents the post item.
The src="./image/Mirage.png" attribute specifies the file path for the image, and the alt="Blog Post 3" attribute specifies the alternative text description for the image.
Lorem ipsum dolor sit amet consectetur adipisicing elit. Illo, sit? Velit expedita assumenda rerum dicta eligendi reprehenderit deleniti blanditiis commodi maiores, quas animi porro laudantium a minus magnam qui accusamus. - Represents the content of the post item.
</p> - Closes the paragraph element.
</div> - Closes the post container.
</section> - Closes the section that displays other news and articles.

|footer|
<footer class="footer"> - Defines a container for the footer section of the web page.
The class="footer" attribute specifies the class name for the element for CSS styling.
<p> - Defines a paragraph element that contains the content of the footer section.
&copy; &nbsp;<strong>Nyx ward entertainmet</strong> - Represents the content of the footer section.
The &copy; entity represents the copyright symbol, and the &nbsp; entity represents a non-breaking space.
</p> - Closes the paragraph element.
</footer> - Closes the footer container

|about.html|
<section class="infC GinfC"> - Defines a container for the section that contains information about the company or brand. The class="infC GinfC" attribute specifies the class name for the element for CSS styling.
<h2 class="lnh2 infH">About</h2> - Defines a heading element that represents the title of the section. The class="lnh2 infH" attribute specifies the class name for the element for CSS styling.
<div> - Defines a container for the content of the section.
<p> - Defines a paragraph element that contains the content of the section.
<img class="infimg2" src="./image/NyxLogo.png" alt="second Nyx logo" /> - Defines an image element that represents an image related to the content of the section.
The class="infimg2" attribute specifies the class name for the element for CSSstyling, the src="./image/NyxLogo.png" attribute specifies the file path for the image, and the alt="second Nyx logo" attribute specifies the alternative text description for the image.
</p> - Closes the paragraph element.
</div> - Closes the container for the content of the section.
</section> - Closes the container for the section that contains information about the company or brand.

|News.html|
all same with lower section exept for NAimg class

|login.html|
<main> - Defines the main content of the webpage.
<div class="box"> - Defines a container for the login form. The class="box" attribute specifies the class name for the element for CSS styling.
<h1>Login</h1> - Defines a heading element that represents the title of the login form.
<form> - Defines a container for the form elements.
<label for="email">Email:</label> - Defines a label element that represents the label for the email input field. The for="email" attribute associates the label element with the email input field.
<input type="email" id="email" required /> - Defines an input element that represents the email input field.
The type="email" attribute specifies that the input field should accept email addresses, the id="email" attribute specifies the id of the input field for JavaScript manipulation, and the required attribute specifies that the input field is required.
<hr /> - Defines a horizontal rule element that separates the email input field from the password input field.
<label for="password">Password:</label> - Defines a label element that represents the label for the password input field. The for="password" attribute associates the label element with the password input field.
<input type="password" id="password" required /> - Defines an input element that represents the password input field.
The type="password" attribute specifies that the input field should accept password inputs and mask the entered characters, the id="password" attribute specifies the id of the input field for JavaScript manipulation, and the required attribute specifies that the input field is required.
<hr /> - Defines a horizontal rule element that separates the password input field from the login button.
<button type="submit">Login</button> - Defines a button element that represents the login button.
The type="submit" attribute specifies that the button should submit the form data when clicked, and the text "Login" inside the button represents the label for the button.
</form> - Closes the container for the form elements.
</div> - Closes the container for the login form.
</main> - Closes the main content of the webpage.
